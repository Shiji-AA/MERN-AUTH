import { apiSlice } from "./apiSlice";

const ADMIN_URL = '/api/admin'


export const adminApiSlice = apiSlice.injectEndpoints({// apiSlice is already defined,in that we can extend using injectEndPoints
    endpoints:(builder)=>({

        adminLogin:builder.mutation({  //here creating a mutation endpoint, adminLogin, using builder.mutation, method
            query:(data)=>({
               url:`${ADMIN_URL}/auth` ,  //data should be passed to /api/admin/auth
               method:'POST',
               body:data
            })
        }),
        adminLogout:builder.mutation({
            query:()=>({
               url:`${ADMIN_URL}/logout` ,
               method:'POST',
            })
        }),  
        adminUpdateUser:builder.mutation({
            query:(data)=>({
               url:`${ADMIN_URL}/update-user` ,
               method:'PUT',
               body:data
            })
        }),
        
        getUserData:builder.mutation({
            query:(data)=>({
               url:`${ADMIN_URL}/get-user` ,
               method:'POST',
            })
        }),
        deleteUserData:builder.mutation({
            query:(data)=>({
               url:`${ADMIN_URL}/delete-user` ,
               method:'DELETE',
               body:data
            })
        }),
        addNewUser:builder.mutation({
            query:(data)=>({
               url:`${ADMIN_URL}/add-user` ,
               method:'POST',
               body:data
            })
        })      

    })
})


export const {
    useAdminLoginMutation,
    useAdminLogoutMutation,
    useAdminUpdateUserMutation,
    useGetUserDataMutation,
    useDeleteUserDataMutation,
    useAddNewUserMutation,
} = adminApiSlice;//This line exports hooks generated by Redux Toolkit for each defined mutation. These hooks can be used in React components to interact with the corresponding API endpoints.

